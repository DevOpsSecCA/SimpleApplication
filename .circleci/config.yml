version: 2.1  # Specifies the version of the CircleCI configuration syntax

workflows:
  version: 2  # Specifies the version of CircleCI workflows being used
  build:
    jobs:
      - build:  # Defines a job named 'build'
          filters:
            branches:
              only:
                - main  # Execute this job only when code is pushed to the 'main' branch.
      - deploy:  # Defines a job named 'deploy'
          filters:
            branches:
              only:
                - main  # Execute this job only when code is pushed to the 'main' branch.
          requires:
            - build # Ensures the 'deploy' job runs only after the 'build' job succeeds

jobs:
  build:
    working_directory: ~/SimpleApplication  # Set the job's working directory
    docker:
      - image: circleci/node:10.16.3  # Use a Node.js 10.16.3 Docker image
    steps:
      - checkout  # Check out the source code from your repository
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@5'  # Update npm to version 5 
      - restore_cache:  # Attempt to restore previously cached dependencies
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm
          command: npm install  # Install project dependencies
      - save_cache:  # Save dependencies for future builds
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  deploy:
    docker:
      - image: circleci/node:10.16.3  # Use the same Node.js Docker image
    steps:
      - run:
          name: deploy-application
          command: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "export SERVER=\"$SERVER\"; export PRIVATE_KEY=\"$PRIVATE_KEY\"; rm -rf SimpleApplication/;git clone https://github.com/DevOpsSecCA/SimpleApplication.git; source SimpleApplication/deploy.sh"  # SSH into the EC2 instance and execute deployment commands
